"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.loadSessionState=loadSessionState;exports.saveSessionState=saveSessionState;var _set2=_interopRequireDefault(require("lodash/set"));var _uniq2=_interopRequireDefault(require("lodash/uniq"));var _map2=_interopRequireDefault(require("lodash/map"));var _utils=require("./utils");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i["return"]!=null)_i["return"]()}finally{if(_d)throw _e}}return _arr}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}var STORAGE_PREFIX="redux-sessions";function serializeStorageKey(userType,dataType){return[STORAGE_PREFIX,dataType,userType].join(":")}function deserializeStorageKey(storageKey){var _storageKey$split=storageKey.split(":"),_storageKey$split2=_slicedToArray(_storageKey$split,3),_=_storageKey$split2[0],dataType=_storageKey$split2[1],userType=_storageKey$split2[2];return{dataType:dataType,userType:userType}}function getUserTypeFromStorageKey(storageKey){var _deserializeStorageKe=deserializeStorageKey(storageKey),userType=_deserializeStorageKe.userType;return userType}function tokenStorageKey(userType){return serializeStorageKey(userType,"token")}function persistStorageKey(userType){return serializeStorageKey(userType,"persist")}function loadSessionState(){if(!_utils.storage.isAvailable()){console.warn("Storage is unavailable, skipping session state load.");return{}}var storageKeys=_utils.storage.getAllKeys().filter(function(key){return key.startsWith(STORAGE_PREFIX)});var userTypes=(0,_uniq2["default"])(storageKeys.map(getUserTypeFromStorageKey));var state={};userTypes.forEach(function(userType){return(0,_set2["default"])(state,userType,{token:_utils.storage.getItem(tokenStorageKey(userType)),persist:!!_utils.storage.getItem(persistStorageKey(userType))})});return state}function saveSessionState(state){if(!_utils.storage.isAvailable()){console.warn("Storage is unavailable, skipping session state save.");return}return(0,_map2["default"])(state,function(_ref,userType){var token=_ref.token,persist=_ref.persist;_utils.storage.setItem(tokenStorageKey(userType),token,{persist:persist});_utils.storage.setItem(persistStorageKey(userType),persist,{persist:persist})})}